/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package crawlspellsuccesscalc;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;
import java.io.UnsupportedEncodingException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author Игорь
 */
public class XPOptimizerFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainCalcFrame
     */
    private int size;
    private int shieldtype;
    private int nmagicSkills;
    
    public XPOptimizerFrame() {
        initComponents();
        size=CrawlCalculator.NORMALSPECIES;
        shieldtype=CrawlCalculator.NOSHIELD;
        nmagicSkills=1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        SkillCComboBox = new javax.swing.JComboBox();
        SpellcastingSpinner = new javax.swing.JSpinner();
        StrSpinner = new javax.swing.JSpinner();
        IntSpinner = new javax.swing.JSpinner();
        Skill1Spinner = new javax.swing.JSpinner();
        Skill2Spinner = new javax.swing.JSpinner();
        Skill3Spinner = new javax.swing.JSpinner();
        SpeciesComboBox = new javax.swing.JComboBox();
        ShieldComboBox = new javax.swing.JComboBox();
        EncumbranceSpinner = new javax.swing.JSpinner();
        ShieldsSpinner = new javax.swing.JSpinner();
        ArmorSpinner = new javax.swing.JSpinner();
        ResultLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jSpinner5 = new javax.swing.JSpinner();
        SpellLvlSpinner = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        WildMagicCheckBox = new javax.swing.JCheckBox();
        WildMagicSpinner = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        WizardryCheckBox = new javax.swing.JCheckBox();
        WizardrySpinner = new javax.swing.JSpinner();
        jLabel15 = new javax.swing.JLabel();
        HatCheckBox = new javax.swing.JCheckBox();
        VehumetCheckBox = new javax.swing.JCheckBox();
        VehumetSpinner = new javax.swing.JSpinner();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        SubduedMagicCheckBox = new javax.swing.JCheckBox();
        SubduedMagicSpinner = new javax.swing.JSpinner();
        jLabel18 = new javax.swing.JLabel();
        SpellcastingAptSpinner = new javax.swing.JSpinner();
        Skill1AptSpinner = new javax.swing.JSpinner();
        Skill2AptSpinner = new javax.swing.JSpinner();
        Skill3AptSpinner = new javax.swing.JSpinner();
        jLabel19 = new javax.swing.JLabel();
        ShieldsAptSpinner = new javax.swing.JSpinner();
        ArmorAptSpinner = new javax.swing.JSpinner();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        NeededMiscastSpinner = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Вычисление шанса мискаста");

        jButton1.setText("Вычислить");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        SkillCComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1 навык", "2 навыка", "3 навыка" }));
        SkillCComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                SkillCComboBoxItemStateChanged(evt);
            }
        });
        SkillCComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SkillCComboBoxActionPerformed(evt);
            }
        });

        SpellcastingSpinner.setModel(new SpinnerNumberModel(0,0,27,0.5));

        StrSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));

        IntSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));

        Skill1Spinner.setModel(new SpinnerNumberModel(0,0,27,0.5));

        Skill2Spinner.setModel(new SpinnerNumberModel(0,0,27,0.5));
        Skill2Spinner.setEnabled(false);

        Skill3Spinner.setModel(new SpinnerNumberModel(0,0,27,0.5));
        Skill3Spinner.setEnabled(false);

        SpeciesComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Spriggan", "Kobold, Halfling", "Ogre, Troll, Centaur, Naga, Formicid", "Other" }));
        SpeciesComboBox.setSelectedIndex(3);
        SpeciesComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                SpeciesComboBoxItemStateChanged(evt);
            }
        });

        ShieldComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Нет щита", "Buckler", "Shield", "Large Shield" }));
        ShieldComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ShieldComboBoxItemStateChanged(evt);
            }
        });

        EncumbranceSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));

        ShieldsSpinner.setModel(new SpinnerNumberModel(0,0,27,0.5));

        ArmorSpinner.setModel(new SpinnerNumberModel(0,0,27,0.5));

        ResultLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel3.setText("Размер персонажа");

        jLabel4.setText("Размер щита");

        jLabel5.setText("Armor Encumbrance rating");

        jLabel6.setText("Shield skill");

        jLabel8.setText("Armor skill");

        jLabel9.setText("Str");

        jLabel10.setText("Int");

        jLabel12.setText("Magic skills");

        jLabel13.setText("От скольки навыков зависит магия");

        jLabel14.setText("Spellcasting");

        SpellLvlSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 9, 1));

        jLabel2.setText("Уровень магии");

        WildMagicCheckBox.setText("Wild Magic mutation");
        WildMagicCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                WildMagicCheckBoxItemStateChanged(evt);
            }
        });

        WildMagicSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 3, 1));
        WildMagicSpinner.setEnabled(false);

        jLabel11.setText("Mut level");

        WizardryCheckBox.setText("Wizardry items");
        WizardryCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                WizardryCheckBoxItemStateChanged(evt);
            }
        });

        WizardrySpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 9, 1));
        WizardrySpinner.setEnabled(false);

        jLabel15.setText("Num of items");

        HatCheckBox.setText("Hat of the High Council");

        VehumetCheckBox.setText("Vehumet worshipper");
        VehumetCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                VehumetCheckBoxItemStateChanged(evt);
            }
        });

        VehumetSpinner.setModel(new javax.swing.SpinnerNumberModel(6, 0, 6, 1));
        VehumetSpinner.setEnabled(false);

        jLabel16.setText("Piety *");

        jLabel17.setText("(and Vehumet supports this spell)");

        SubduedMagicCheckBox.setText("Subdued Magic mutation");
        SubduedMagicCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                SubduedMagicCheckBoxItemStateChanged(evt);
            }
        });

        SubduedMagicSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 3, 1));
        SubduedMagicSpinner.setEnabled(false);

        jLabel18.setText("Mut level");

        SpellcastingAptSpinner.setModel(new SpinnerNumberModel(0,-10,10,1));

        Skill1AptSpinner.setModel(new SpinnerNumberModel(0,-10,10,1));

        Skill2AptSpinner.setModel(new SpinnerNumberModel(0,-10,10,1));
        Skill2AptSpinner.setEnabled(false);

        Skill3AptSpinner.setModel(new SpinnerNumberModel(0,-10,10,1));
        Skill3AptSpinner.setEnabled(false);

        jLabel19.setText("Shield Apt");

        ShieldsAptSpinner.setModel(new SpinnerNumberModel(0,-10,10,1));

        ArmorAptSpinner.setModel(new SpinnerNumberModel(0,-10,10,1));

        jLabel20.setText("Armor Apt");

        jLabel21.setText("Need Miscast:");

        NeededMiscastSpinner.setModel(new SpinnerNumberModel(10,0,100,5));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(295, 295, 295)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(255, 255, 255)
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel10))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addComponent(jLabel13))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(36, 36, 36)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel14)
                                            .addComponent(jLabel2))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(SpellLvlSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(SkillCComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(SpellcastingSpinner))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(SpellcastingAptSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(53, 53, 53)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel17)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addComponent(jLabel11)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(WildMagicSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(WildMagicCheckBox)
                                                .addComponent(jLabel12)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(Skill3Spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(Skill3AptSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(VehumetCheckBox, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(Skill1Spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(Skill2Spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(Skill2AptSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(Skill1AptSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel16)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(VehumetSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jSpinner5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(SubduedMagicCheckBox)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel18)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(SubduedMagicSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(HatCheckBox))))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel9))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel5))
                                        .addGap(52, 52, 52))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(56, 56, 56)
                                        .addComponent(jLabel21)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(NeededMiscastSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 49, Short.MAX_VALUE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(StrSpinner, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                                .addComponent(IntSpinner, javax.swing.GroupLayout.Alignment.LEADING))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addComponent(ResultLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(WizardryCheckBox)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(SpeciesComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(ShieldComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(EncumbranceSpinner))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel15)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(WizardrySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(40, 40, 40)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel19)))
                                    .addComponent(jLabel20))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(ArmorAptSpinner)
                                    .addComponent(ShieldsSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                                    .addComponent(ArmorSpinner)
                                    .addComponent(ShieldsAptSpinner))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SpellcastingSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StrSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel14)
                    .addComponent(SpellcastingAptSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IntSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SpellLvlSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SkillCComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SpeciesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Skill1Spinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Skill1AptSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Skill2Spinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Skill2AptSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Skill3Spinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Skill3AptSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(HatCheckBox)
                                        .addGap(13, 13, 13)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(VehumetSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel16)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(WildMagicCheckBox)
                                            .addComponent(WizardryCheckBox)
                                            .addComponent(SubduedMagicCheckBox))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(WildMagicSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel11)
                                            .addComponent(WizardrySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel15)
                                            .addComponent(SubduedMagicSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel18))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(VehumetCheckBox)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel17)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ShieldComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ShieldsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(EncumbranceSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ArmorSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel19)
                                            .addComponent(ShieldsAptSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(11, 11, 11)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jSpinner5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(ArmorAptSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel20)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 134, Short.MAX_VALUE)
                                        .addComponent(ResultLabel))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel21)
                                            .addComponent(NeededMiscastSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(16, 16, 16)))
                        .addComponent(jButton1)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SkillCComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SkillCComboBoxItemStateChanged
        //ResultLabel.setText(evt.getItem().toString());
        //int n=SkillCComboBox.getItemCount();
        int i=0;
        for(;!SkillCComboBox.getItemAt(i).equals(evt.getItem());i++){}
       
        Skill2Spinner.setEnabled(i>0);
        Skill2AptSpinner.setEnabled(i>0);
        Skill3Spinner.setEnabled(i>1);
        Skill3AptSpinner.setEnabled(i>1);
        nmagicSkills=i+1;
    }//GEN-LAST:event_SkillCComboBoxItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        
        double spellcasting = (Double)SpellcastingSpinner.getValue();;
        //this.nskill = nskill;
        //this.magic_skills = magic_skills;
        double[] magicSkills=new double[nmagicSkills];
        magicSkills[0]=(Double)Skill1Spinner.getValue();
        if(nmagicSkills>1)
            magicSkills[1]=(Double)Skill2Spinner.getValue();
        if(nmagicSkills>2)
            magicSkills[2]=(Double)Skill3Spinner.getValue();
        double shields = (Double)ShieldsSpinner.getValue();
        //this.shieldtype = ShieldsSpinner;
        double armor = (Double)ArmorSpinner.getValue();
        int encumbrance = (Integer)EncumbranceSpinner.getValue();
        //this.size = size;
        int Str = (Integer)StrSpinner.getValue();
        int Int = (Integer)IntSpinner.getValue();
        int spellLvl = (Integer)SpellLvlSpinner.getValue();
        int vehumet=(Integer)(VehumetCheckBox.isSelected() ? VehumetSpinner.getValue() : CrawlCalculator.NOVEHUMET);
        int wizardry=(Integer)(WizardryCheckBox.isSelected() ? WizardrySpinner.getValue() : CrawlCalculator.NOWIZARDRY);
        int wildmagic=(Integer)(WildMagicCheckBox.isSelected() ? WildMagicSpinner.getValue() : CrawlCalculator.NOWILDMAGIC);
        int subduedmagic=(Integer)(SubduedMagicCheckBox.isSelected() ? SubduedMagicSpinner.getValue() : CrawlCalculator.NOSUBDUEDMAGIC);
        boolean hat=HatCheckBox.isSelected();
        CrawlCalculator calc=new CrawlCalculator(spellcasting,nmagicSkills,magicSkills,vehumet,wizardry,wildmagic,subduedmagic,hat,shields,shieldtype,armor,encumbrance,size,Str,Int,spellLvl);
        int neededMiscast=(Integer)NeededMiscastSpinner.getValue();
        int[] magicSkillsApts=new int[nmagicSkills];
        magicSkillsApts[0]=(Integer)Skill1AptSpinner.getValue();
        if(nmagicSkills>1)
            magicSkillsApts[1]=(Integer)Skill2AptSpinner.getValue();
        if(nmagicSkills>2)
            magicSkillsApts[2]=(Integer)Skill3AptSpinner.getValue();
        int shieldsApt=(Integer)ShieldsAptSpinner.getValue();
        int armorApt=(Integer)ArmorAptSpinner.getValue();
        int spellcastingApt=(Integer)SpellcastingAptSpinner.getValue();
        XPOptimizer optimus=new XPOptimizer(calc,neededMiscast,magicSkillsApts,spellcastingApt,armorApt,shieldsApt);
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        PrintStream ps = new PrintStream(baos);
        if(optimus.OptimizeXP())
        {
            ps.format("Miscast: %.0f%%\n",calc.calculateMiscast());
            ps.format("Armor skill: %.1f\n",calc.getArmor());
            ps.format("Shields skill: %.1f\n",calc.getShields());
            ps.format("Spellcasting skill: %.1f\n",calc.getSpellcasting());
            for(int i=0; i<calc.getMagic_skills().length; i++)
                ps.format("Magic skill %d: %.1f\n", i+1,calc.getMagic_skills()[i]);
        }
        else
        {
            ps.println("Impossible to reach that miscast %");
            double[] arr=new double[calc.getMagic_skills().length];
            for(int i=0; i<calc.getMagic_skills().length; i++)
                arr[i]=27;
            ps.format("Minimum: %.0f%%\n",calc.calculateMiscast(27, arr.length, arr, 27, 27));
        }
        try {
            String content = baos.toString("UTF-8");
            JOptionPane.showMessageDialog(this,
            content,
            "Result",
            JOptionPane.INFORMATION_MESSAGE);
            //double res=calc.calculateMiscast();
            //ResultLabel.setText(String.valueOf(res));
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(XPOptimizerFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void SpeciesComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SpeciesComboBoxItemStateChanged
       int i=0;
        for(;!SpeciesComboBox.getItemAt(i).equals(evt.getItem());i++){}
        switch(i)
        {
            case 0:
                size=CrawlCalculator.LITTLESPECIES;
                break;
            case 1:
                size=CrawlCalculator.SMALLSPECIES;
                break;
            case 2:
                size=CrawlCalculator.BIGSPECIES;
                break;
            case 3:
                size=CrawlCalculator.NORMALSPECIES;
                break;
        }
    }//GEN-LAST:event_SpeciesComboBoxItemStateChanged

    private void ShieldComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ShieldComboBoxItemStateChanged
         int i=0;
        for(;!ShieldComboBox.getItemAt(i).equals(evt.getItem());i++){}
        switch(i)
        {
            case 0:
                shieldtype=CrawlCalculator.NOSHIELD;
                break;
            case 1:
                shieldtype=CrawlCalculator.BUCKLER;
                break;
            case 2:
                shieldtype=CrawlCalculator.SHIELD;
                break;
            case 3:
                shieldtype=CrawlCalculator.BIGSHIELD;
                break;
        }
        
    }//GEN-LAST:event_ShieldComboBoxItemStateChanged

    private void WildMagicCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_WildMagicCheckBoxItemStateChanged
        WildMagicSpinner.setEnabled(WildMagicCheckBox.isSelected());
    }//GEN-LAST:event_WildMagicCheckBoxItemStateChanged

    private void WizardryCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_WizardryCheckBoxItemStateChanged
        WizardrySpinner.setEnabled(WizardryCheckBox.isSelected());
    }//GEN-LAST:event_WizardryCheckBoxItemStateChanged

    private void VehumetCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_VehumetCheckBoxItemStateChanged
        VehumetSpinner.setEnabled(VehumetCheckBox.isSelected());
    }//GEN-LAST:event_VehumetCheckBoxItemStateChanged

    private void SubduedMagicCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SubduedMagicCheckBoxItemStateChanged
        SubduedMagicSpinner.setEnabled(SubduedMagicCheckBox.isSelected());
    }//GEN-LAST:event_SubduedMagicCheckBoxItemStateChanged

    private void SkillCComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SkillCComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SkillCComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner ArmorAptSpinner;
    private javax.swing.JSpinner ArmorSpinner;
    private javax.swing.JSpinner EncumbranceSpinner;
    private javax.swing.JCheckBox HatCheckBox;
    private javax.swing.JSpinner IntSpinner;
    private javax.swing.JSpinner NeededMiscastSpinner;
    private javax.swing.JLabel ResultLabel;
    private javax.swing.JComboBox ShieldComboBox;
    private javax.swing.JSpinner ShieldsAptSpinner;
    private javax.swing.JSpinner ShieldsSpinner;
    private javax.swing.JSpinner Skill1AptSpinner;
    private javax.swing.JSpinner Skill1Spinner;
    private javax.swing.JSpinner Skill2AptSpinner;
    private javax.swing.JSpinner Skill2Spinner;
    private javax.swing.JSpinner Skill3AptSpinner;
    private javax.swing.JSpinner Skill3Spinner;
    private javax.swing.JComboBox SkillCComboBox;
    private javax.swing.JComboBox SpeciesComboBox;
    private javax.swing.JSpinner SpellLvlSpinner;
    private javax.swing.JSpinner SpellcastingAptSpinner;
    private javax.swing.JSpinner SpellcastingSpinner;
    private javax.swing.JSpinner StrSpinner;
    private javax.swing.JCheckBox SubduedMagicCheckBox;
    private javax.swing.JSpinner SubduedMagicSpinner;
    private javax.swing.JCheckBox VehumetCheckBox;
    private javax.swing.JSpinner VehumetSpinner;
    private javax.swing.JCheckBox WildMagicCheckBox;
    private javax.swing.JSpinner WildMagicSpinner;
    private javax.swing.JCheckBox WizardryCheckBox;
    private javax.swing.JSpinner WizardrySpinner;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSpinner jSpinner5;
    // End of variables declaration//GEN-END:variables
}
